name: Build OnePlus_ace2
on:
  workflow_call:
    inputs:
      CPU:
        type: string
        required: false
        default: 'sm8475'
      FEIL:
        type: string
        required: false
        default: 'oneplus_ace2_v'
      CPUD:
        type: string
        required: false
        default: 'taro'
      ANDROID_VERSION:
        type: string
        required: false
        default: 'android12'
      KERNEL_VERSION:
        type: string
        required: false
        default: '5.10'
      KERNEL_NAME:
        type: string
        required: false
        default: '-android12-9-0-g0a04ff961c85'
      kernelsu_variant:
        type: string
        required: false
        default: 'SukiSU'
      kernelsu_version:
        type: string
        required: false
        default: 'main'
      SUSFS_ENABLED:
        type: string
        required: false
        default: true
      VFS_patch_ENABLED:
        type: string
        required: false
        default: 'enable'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 8192
          temp-reserve-mb: 2048
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'

      - name: Configure Git
        run: |
         git config --global user.name "ychenxuan"
         git config --global user.email "3494167979@qq.com"

      - name: Install dependencies
        run: |
         sudo apt update && sudo apt upgrade -y
         sudo apt install -y python3 git curl

      - name: Install repo tool
        run: |
         curl https://storage.googleapis.com/git-repo-downloads/repo > ~/repo
         chmod a+x ~/repo
         sudo mv ~/repo /usr/local/bin/repo

      - name: Initialize repo and sync
        run: |
         mkdir kernel_workspace && cd kernel_workspace
         repo init -u https://github.com/OnePlusOSS/kernel_manifest.git -b oneplus/sm8475 -m oneplus_ace2_v.xml --depth=1
         repo sync
         rm kernel_platform/common/android/abi_gki_protected_exports_* || echo "No protected exports!"
         rm kernel_platform/msm-kernel/android/abi_gki_protected_exports_* || echo "No protected exports!"
         sed -i 's/ -dirty//g' kernel_platform/common/scripts/setlocalversion
         sed -i 's/ -dirty//g' kernel_platform/msm-kernel/scripts/setlocalversion
      
      - name: KernelSU & SukiSU version
        if: ${{ inputs.kernelsu_variant == 'Official' || inputs.kernelsu_variant == 'SukiSU' }}
        run: |
         if [[ "${{ inputs.kernelsu_version }}" == "tag" ]]; then
         echo "BRANCH=-" >> $GITHUB_ENV
         elif [[ "${{ inputs.kernelsu_version }}" == "main" ]]; then
         echo "BRANCH=-s susfs-dev" >> $GITHUB_ENV
         fi

      - name: Add KernelSU-SukiSU
        if: ${{ inputs.kernelsu_variant == 'SukiSU' }}
        run: |
         cd kernel_workspace/kernel_platform
         curl -LSs "https://raw.githubusercontent.com/ShirkNeko/SukiSU-Ultra/main/kernel/setup.sh" | bash ${{ env.BRANCH }}
         cd ./KernelSU
         KSU_VERSION=$(expr $(/usr/bin/git rev-list --count main) "+" 10606)
         echo "KSUVER=$KSU_VERSION" >> $GITHUB_ENV
         export KSU_VERSION=$KSU_VERSION
         sed -i "s/DKSU_VERSION=12500/DKSU_VERSION=${KSU_VERSION}/" kernel/Makefile

      - name: Apply SUSFS Patches SukiSU
        if: ${{ (github.event.inputs.kernelsu_variant || 'SukiSU') == 'SukiSU' && (github.event.inputs.SUSFS_ENABLED || 'false') == 'true' }}
        run: |
         cd kernel_workspace
         git clone https://gitlab.com/simonpunk/susfs4ksu.git -b gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}
         git clone https://github.com/ShirkNeko/SukiSU_patch.git
         cd kernel_platform
         cp ../susfs4ksu/kernel_patches/50_add_susfs_in_gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}.patch ./common/
         cp ../susfs4ksu/kernel_patches/fs/* ./common/fs/
         cp ../susfs4ksu/kernel_patches/include/linux/* ./common/include/linux/
         echo "正在给内核打susfs补丁"
         cd ./common
         patch -p1 < 50_add_susfs_in_gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}.patch || true
         echo "完成"

      - name: Apply Hide Stuff Patches
        if: ${{ (github.event.inputs.SUSFS_ENABLED || 'false') == 'true' }}
        run: |
         cd kernel_workspace/kernel_platform/common
         cp ../../SukiSU_patch/69_hide_stuff.patch ./
         echo "正在打隐藏应用补丁"
         patch -p1 -F 3 < 69_hide_stuff.patch

      - name: Apply New Hooks Patches
        if: ${{ (github.event.inputs.VFS_patch_ENABLED || 'disable') == 'enable' }}
        run: |
         cd kernel_workspace/kernel_platform/common
         cp ../../SukiSU_patch/hooks/new_hooks.patch ./
         echo "正在打vfs补丁"
         patch -p1 -F 3 < new_hooks.patch
         echo "完成"

     # 以下代码根据需要取消注释启用 lz4kd
    #if [ "${{ inputs.KERNEL_VERSION }}" != "5.10" ]; then
    #  cp ../../SukiSU_patch/other/lz4k_patch/${{ inputs.KERNEL_VERSION }}/lz4kd.patch ./
    #  patch -p1 -F 3 < lz4kd.patch || true
    #fi

      - name: Add SUSFS Configuration Settings
        run: |
          cd kernel_workspace/kernel_platform
          # Add KSU configuration settings
          echo "CONFIG_KSU=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KPM=y" >> ./common/arch/arm64/configs/gki_defconfig

          # Add VFS configuration settings
          if [[ "${{ github.event.inputs.VFS_patch_ENABLED }}" == 'enable' ]]; then
            echo "CONFIG_KSU_SUSFS_SUS_SU=n" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_KSU_MANUAL_HOOK=y" >> ./common/arch/arm64/configs/gki_defconfig
          else
            echo "CONFIG_KSU_SUSFS_SUS_SU=y" >> ./common/arch/arm64/configs/gki_defconfig
          fi
          
          # Add SUSFS configuration settings
          echo "CONFIG_KSU_SUSFS=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_HAS_MAGIC_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_PATH=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_KSU_DEFAULT_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_BIND_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_KSTAT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_OVERLAYFS=n" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_TRY_UMOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_TRY_UMOUNT_FOR_BIND_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SPOOF_UNAME=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_ENABLE_LOG=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_HIDE_KSU_SUSFS_SYMBOLS=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SPOOF_CMDLINE_OR_BOOTCONFIG=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_OPEN_REDIRECT=y" >> ./common/arch/arm64/configs/gki_defconfig

          #if [ "${{ github.event.inputs.KERNEL_VERSION }}" != "6.6" ] && [ "${{ github.event.inputs.KERNEL_VERSION }}" != "5.10" ]; then
          #  sed -i 's/CONFIG_ZRAM=m/CONFIG_ZRAM=y/g' ./common/arch/arm64/configs/gki_defconfig
          #  sed -i 's/CONFIG_ZSMALLOC=m/CONFIG_ZSMALLOC=y/g' ./common/arch/arm64/configs/gki_defconfig
          #  sed -i 's/CONFIG_MODULE_SIG=y/CONFIG_MODULE_SIG=n/g' ./common/arch/arm64/configs/gki_defconfig
          #  echo "CONFIG_ZRAM_WRITEBACK=y" >> ./common/arch/arm64/configs/gki_defconfig
          #  echo "CONFIG_CRYPTO_LZ4K=y" >> ./common/arch/arm64/configs/gki_defconfig
          #  echo "CONFIG_CRYPTO_LZ4KD=y" >> ./common/arch/arm64/configs/gki_defconfig
          #  echo "CONFIG_CRYPTO_LZ4HC=y" >> ./common/arch/arm64/configs/gki_defconfig
          #  echo "CONFIG_CRYPTO_842=y" >> ./common/arch/arm64/configs/gki_defconfig
          #fi

          #if [ "${{ github.event.inputs.KERNEL_VERSION }}" = "6.6" ]; then
          #  echo "CONFIG_ZSMALLOC=y" >> ./common/arch/arm64/configs/gki_defconfig
          #  echo "CONFIG_ZRAM_WRITEBACK=y" >> ./common/arch/arm64/configs/gki_defconfig
          #  sed -i 's/CONFIG_ZRAM=m/CONFIG_ZRAM=y/g' ./common/arch/arm64/configs/gki_defconfig
          #  echo "CONFIG_ZRAM_WRITEBACK=y" >> ./common/arch/arm64/configs/gki_defconfig
          #  echo "CONFIG_CRYPTO_LZ4K=y" >> ./common/arch/arm64/configs/gki_defconfig
          #  echo "CONFIG_CRYPTO_LZ4KD=y" >> ./common/arch/arm64/configs/gki_defconfig
          #  echo "CONFIG_CRYPTO_LZ4HC=y" >> ./common/arch/arm64/configs/gki_defconfig
          #  echo "CONFIG_CRYPTO_842=y" >> ./common/arch/arm64/configs/gki_defconfig
          #fi

          
          # Remove check_defconfig
          sed -i 's/check_defconfig//' ./common/build.config.gki

      - name: Add make name
        run: |
         cd kernel_workspace/kernel_platform
         sed -i '$s|echo "\$res"|echo "\${{ github.event.inputs.KERNEL_NAME }}"|' ./common/scripts/setlocalversion
  
      - name: Build kernel
        run: |
          cd kernel_workspace
          if [[ "${{ github.event.inputs.CPU }}" == "sm8650" || "${{ github.event.inputs.CPU }}" == "sm8750" ]]; then
            ./kernel_platform/build_with_bazel.py -t ${{ github.event.inputs.CPUD }} gki --action_env=KSU_VERSION
          else
            LTO=thin ./kernel_platform/oplus/build/oplus_build_kernel.sh ${{ github.event.inputs.CPUD }} gki
          fi
         
      - name: Make AnyKernel3
        run: |
          # 克隆 AnyKernel3 仓库
          git clone https://github.com/Kernel-SU/AnyKernel3 --depth=1
          rm -rf ./AnyKernel3/.git
          if [[ "${{ inputs.CPU }}" == "sm8650" ]]; then
            cp kernel_workspace/kernel_platform/out/msm-kernel-${{ github.event.inputs.CPUD }}-gki/dist/Image ./AnyKernel3/
            cp kernel_workspace/kernel_platform/out/msm-kernel-${{ github.event.inputs.CPUD }}-gki/dist/Image ./kernel_workspace/kernel
          else
            cp kernel_workspace/out/dist/Image ./AnyKernel3/
            cp kernel_workspace/out/dist/Image ./kernel_workspace/kernel
          fi

         
         
      - name: Upload AnyKernel3
        uses: actions/upload-artifact@v4
        with:
         name: AnyKernel3_KernelSU_${{ env.KSUVER }}_${{ github.event.inputs.FEIL }}
         path: ./AnyKernel3/*

      - name: Upload Image
        uses: actions/upload-artifact@v4
        with:
         name: Image_KernelSU_${{ env.KSUVER }}_${{ github.event.inputs.FEIL }}
         path: kernel_workspace/kernel
